# Docker Compose pour TensorRT-LLM Benchmark
# Suppression de version: obsol√®te dans Compose moderne

services:
  tensorrt-llm-benchmark:
    image: nvcr.io/nvidia/tensorrt-llm/devel:1.0.0rc6
    container_name: tensorrt_benchmark
    environment:
      - NVIDIA_VISIBLE_DEVICES=0
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/workspace
    volumes:
      # Montage du projet complet
      - .:/workspace/host
      # Persistance des donn√©es (mod√®les, moteurs, r√©sultats)  
      - ./data:/workspace/host/data
    working_dir: /workspace/host
    tty: true
    stdin_open: true
    ipc: host
    ulimits:
      memlock: -1
      stack: 67108864
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    # Scripts d'aide via docker-compose
    profiles:
      - manual

  # Service pour l'ex√©cution automatique compl√®te
  benchmark-full:
    extends: tensorrt-llm-benchmark
    container_name: tensorrt_benchmark_auto
    command: 
      - /bin/bash
      - -c
      - |
        set -e
        echo "üöÄ D√©marrage du benchmark automatique TensorRT-LLM"
        echo "=================================================="
        mkdir -p data/models data/engines data/checkpoints data/results
        echo "1Ô∏è‚É£  Construction du moteur TensorRT..."
        bash scripts/build_engine.sh
        echo "2Ô∏è‚É£  Benchmark PyTorch (r√©f√©rence)..."
        bash scripts/bench_pytorch.sh
        echo "3Ô∏è‚É£  Benchmark TensorRT-LLM..."
        bash scripts/bench_trt.sh
        echo "4Ô∏è‚É£  Comparaison des r√©sultats..."
        python3 scripts/compare.py
        echo "‚úÖ Benchmark termin√©! Consultez ./data/results/"
        echo "üìä Graphiques: benchmark_comparison.png"
        echo "üìã Rapport: benchmark_comparison_report.json"
    profiles:
      - auto

  # Service pour benchmark PyTorch uniquement
  benchmark-pytorch:
    extends: tensorrt-llm-benchmark
    container_name: pytorch_benchmark_only
    command:
      - /bin/bash
      - -c
      - |
        set -e
        mkdir -p data/results
        echo "üî• Benchmark PyTorch uniquement..."
        bash scripts/bench_pytorch.sh
        echo "‚úÖ Benchmark PyTorch termin√©!"
    profiles:
      - pytorch-only

  # Service pour benchmark TensorRT uniquement (n√©cessite un moteur pr√©-construit)
  benchmark-tensorrt:
    extends: tensorrt-llm-benchmark
    container_name: tensorrt_benchmark_only
    command:
      - /bin/bash
      - -c
      - |
        set -e
        mkdir -p data/results
        echo "‚ö° Benchmark TensorRT-LLM uniquement..."
        if [ ! -d "data/engines/tinyllama" ]; then
          echo "‚ùå Moteur TensorRT non trouv√©. Ex√©cutez d'abord build-engine."
          exit 1
        fi
        bash scripts/bench_trt.sh
        echo "‚úÖ Benchmark TensorRT termin√©!"
    profiles:
      - tensorrt-only

  # Service pour construire le moteur uniquement
  build-engine:
    extends: tensorrt-llm-benchmark
    container_name: tensorrt_build_engine
    command:
      - /bin/bash
      - -c
      - |
        set -e
        echo "üîß Construction du moteur TensorRT-LLM..."
        mkdir -p data/models data/engines data/checkpoints
        bash scripts/build_engine.sh
        echo "‚úÖ Moteur construit!"
    profiles:
      - build-only

  # Service pour la comparaison uniquement
  compare-results:
    extends: tensorrt-llm-benchmark
    container_name: tensorrt_compare
    command:
      - /bin/bash
      - -c
      - |
        set -e
        echo "üìä Comparaison des r√©sultats..."
        if [ ! -f "data/results/pytorch_benchmark.json" ] || [ ! -f "data/results/tensorrt_benchmark.json" ]; then
          echo "‚ùå Fichiers de benchmark manquants. Ex√©cutez d'abord les benchmarks."
          exit 1
        fi
        python3 scripts/compare.py
        echo "‚úÖ Comparaison termin√©e!"
    profiles:
      - compare-only

volumes:
  models-data:
  engines-data:
  checkpoints-data:
  results-data:
