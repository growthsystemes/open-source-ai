# Script PowerShell simplifi√© pour configurer l'authentification NVIDIA NGC
param(
    [Parameter()]
    [string]$ApiKey = ""
)

Write-Host "üîê Configuration NVIDIA NGC Registry" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Green

# V√©rification Docker
Write-Host "üîç V√©rification de Docker..." -ForegroundColor Yellow
try {
    docker --version | Out-Null
    Write-Host "‚úÖ Docker trouv√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker non trouv√©. Installez Docker Desktop." -ForegroundColor Red
    exit 1
}

# Demander la cl√© API si pas fournie
if ([string]::IsNullOrEmpty($ApiKey)) {
    Write-Host ""
    Write-Host "üìã Vous avez besoin d'une cl√© API NGC de NVIDIA" -ForegroundColor Cyan
    Write-Host "Si vous n'en avez pas encore :" -ForegroundColor White
    Write-Host "1. Aller sur https://ngc.nvidia.com" -ForegroundColor White
    Write-Host "2. Cr√©er un compte (gratuit)" -ForegroundColor White
    Write-Host "3. Profile > Setup > Generate API Key" -ForegroundColor White
    Write-Host ""
    
    $ApiKey = Read-Host "üîë Entrez votre cl√© API NGC (commence par nvapi-)"
    
    if ([string]::IsNullOrEmpty($ApiKey)) {
        Write-Host "‚ùå Cl√© API requise" -ForegroundColor Red
        exit 1
    }
}

Write-Host ""
Write-Host "üîë Connexion au registry NVIDIA..." -ForegroundColor Yellow

# Connexion Docker avec les credentials
$username = '$oauthtoken'

try {
    # Utiliser docker login de mani√®re s√©curis√©e
    $ApiKey | docker login nvcr.io --username $username --password-stdin
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Connexion r√©ussie au registry NVIDIA !" -ForegroundColor Green
        
        # Test de t√©l√©chargement de l'image
        Write-Host ""
        Write-Host "üß™ Test de l'image TensorRT-LLM..." -ForegroundColor Yellow
        Write-Host "‚è≥ T√©l√©chargement en cours (peut prendre plusieurs minutes pour la premi√®re fois)..." -ForegroundColor Cyan
        
        docker pull nvcr.io/nvidia/tensorrt-llm/devel:1.0.0rc6
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Image TensorRT-LLM t√©l√©charg√©e avec succ√®s !" -ForegroundColor Green
            Write-Host ""
            Write-Host "üöÄ Vous pouvez maintenant lancer le benchmark :" -ForegroundColor Cyan
            Write-Host "   .\run_benchmark.ps1 -Mode all" -ForegroundColor White
            Write-Host "   ou" -ForegroundColor Gray
            Write-Host "   docker-compose --profile auto up benchmark-full" -ForegroundColor White
        } else {
            Write-Host "‚ö†Ô∏è  Image pas encore t√©l√©charg√©e, mais authentification OK" -ForegroundColor Yellow
            Write-Host "L'image se t√©l√©chargera automatiquement au premier lancement" -ForegroundColor White
        }
    } else {
        Write-Host "‚ùå √âchec de la connexion" -ForegroundColor Red
        Write-Host "V√©rifiez que votre cl√© API est correcte" -ForegroundColor White
        Write-Host "Elle doit commencer par 'nvapi-' et √™tre obtenue sur https://ngc.nvidia.com" -ForegroundColor White
        exit 1
    }
} catch {
    Write-Host "‚ùå Erreur lors de la connexion: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üéØ Configuration termin√©e !" -ForegroundColor Green